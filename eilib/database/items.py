# Autogenerated file. Do not modify
from __future__ import annotations

from .abstract import EiDatabase, EiDatabaseCustomType, EiDatabaseTable, EiDatabaseTableRow


class DamageTypes(EiDatabaseCustomType):

    __slots__ = (
        "piercing",
        "slashing",
        "bludgeoning",
        "termal",
        "chemic",
        "electric",
        "general",
    )

    def __init__(self):
        self.piercing: float | None = None
        self.slashing: float | None = None
        self.bludgeoning: float | None = None
        self.termal: float | None = None
        self.chemic: float | None = None
        self.electric: float | None = None
        self.general: float | None = None
        super().__init__()


class DamageTypes2(EiDatabaseCustomType):

    __slots__ = (
        "absrobtion",
        "piercing",
        "slashing",
        "bludgeoning",
        "termal",
        "chemic",
        "electric",
        "general",
        "unk",
    )

    def __init__(self):
        self.absrobtion: float | None = None
        self.piercing: float | None = None
        self.slashing: float | None = None
        self.bludgeoning: float | None = None
        self.termal: float | None = None
        self.chemic: float | None = None
        self.electric: float | None = None
        self.general: float | None = None
        self.unk: float | None = None
        super().__init__()


class Modifiers(EiDatabaseCustomType):

    __slots__ = (
        "science",
        "stealing",
        "unk",
    )

    def __init__(self):
        self.science: int | None = None
        self.stealing: int | None = None
        self.unk: int | None = None
        super().__init__()


class Material(EiDatabaseTableRow):

    __slots__ = (
        "name",
        "type",
        "code",
        "id",
        "price",
        "weight",
        "mana",
        "slots",
        "durability",
        "skill",
        "damage",
        "absorption",
        "unk12",
        "shops",
    )

    def __init__(self):
        self.name: str | None = None
        self.type: str | None = None
        self.code: str | None = None
        self.id: int | None = None
        self.price: float | None = None
        self.weight: float | None = None
        self.mana: float | None = None
        self.slots: int | None = None
        self.durability: float | None = None
        self.skill: int | None = None
        self.damage: float | None = None
        self.absorption: DamageTypes | None = None
        self.unk12: int | None = None
        self.shops: int | None = None
        super().__init__()

    @property
    def _db_type(self):
        return ItemsDatabase


class Weapon(EiDatabaseTableRow):

    __slots__ = (
        "name",
        "type",
        "typeid",
        "material_type",
        "unk4",
        "texture_type_index",
        "texture_type_index_2",
        "price",
        "weight",
        "size",
        "mana",
        "slots",
        "durability",
        "components",
        "shops",
        "deconstructable",
        "actions",
        "unk22",
        "range",
        "damage_min",
        "damage_max",
        "damage_proportions",
        "unk27",
        "unk28",
        "attack_modifier",
        "defence_modifier",
    )

    def __init__(self):
        self.name: str | None = None
        self.type: str | None = None
        self.typeid: int | None = None
        self.material_type: str | None = None
        self.unk4: int | None = None
        self.texture_type_index: int | None = None
        self.texture_type_index_2: int | None = None
        self.price: float | None = None
        self.weight: float | None = None
        self.size: float | None = None
        self.mana: float | None = None
        self.slots: int | None = None
        self.durability: float | None = None
        self.components: int | None = None
        self.shops: int | None = None
        self.deconstructable: int | None = None
        self.actions: int | None = None
        self.unk22: list[float] | None = None
        self.range: float | None = None
        self.damage_min: float | None = None
        self.damage_max: float | None = None
        self.damage_proportions: DamageTypes | None = None
        self.unk27: bytes | None = None
        self.unk28: bytes | None = None
        self.attack_modifier: float | None = None
        self.defence_modifier: float | None = None
        super().__init__()

    @property
    def _db_type(self):
        return ItemsDatabase


class Armor(EiDatabaseTableRow):

    __slots__ = (
        "name",
        "type",
        "typeid",
        "material_type",
        "unk4",
        "texture_type_index",
        "texture_type_index_2",
        "price",
        "weight",
        "size",
        "mana",
        "slots",
        "durability",
        "components",
        "shops",
        "deconstructable",
        "main",
        "additional",
        "graphics_data_apply_wounds",
        "graphics_data_wear_order",
        "unk25",
        "unk26",
    )

    def __init__(self):
        self.name: str | None = None
        self.type: str | None = None
        self.typeid: int | None = None
        self.material_type: str | None = None
        self.unk4: int | None = None
        self.texture_type_index: int | None = None
        self.texture_type_index_2: int | None = None
        self.price: float | None = None
        self.weight: float | None = None
        self.size: float | None = None
        self.mana: float | None = None
        self.slots: int | None = None
        self.durability: float | None = None
        self.components: int | None = None
        self.shops: int | None = None
        self.deconstructable: int | None = None
        self.main: DamageTypes2 | None = None
        self.additional: DamageTypes2 | None = None
        self.graphics_data_apply_wounds: int | None = None
        self.graphics_data_wear_order: int | None = None
        self.unk25: bytes | None = None
        self.unk26: bytes | None = None
        super().__init__()

    @property
    def _db_type(self):
        return ItemsDatabase


class QuickItem(EiDatabaseTableRow):

    __slots__ = (
        "name",
        "type",
        "unk2",
        "material_type",
        "unk4",
        "texture_type_index",
        "texture_type_index_2",
        "price",
        "weight",
        "size",
        "mana",
        "slots",
        "durability",
        "components",
        "shops",
        "deconstructable",
        "quick_item_id",
        "graphics_data_level",
        "damage",
        "unk24",
        "spell",
        "modifier",
        "unk27",
    )

    def __init__(self):
        self.name: str | None = None
        self.type: str | None = None
        self.unk2: int | None = None
        self.material_type: str | None = None
        self.unk4: int | None = None
        self.texture_type_index: int | None = None
        self.texture_type_index_2: int | None = None
        self.price: float | None = None
        self.weight: float | None = None
        self.size: float | None = None
        self.mana: float | None = None
        self.slots: int | None = None
        self.durability: float | None = None
        self.components: int | None = None
        self.shops: int | None = None
        self.deconstructable: int | None = None
        self.quick_item_id: int | None = None
        self.graphics_data_level: int | None = None
        self.damage: float | None = None
        self.unk24: float | None = None
        self.spell: str | None = None
        self.modifier: Modifiers | None = None
        self.unk27: bytes | None = None
        super().__init__()

    @property
    def _db_type(self):
        return ItemsDatabase


class QuestItem(EiDatabaseTableRow):

    __slots__ = (
        "name",
        "type",
        "unk2",
        "material_type",
        "unk4",
        "texture_type_index",
        "texture_type_index_2",
        "price",
        "weight",
        "size",
        "mana",
        "slots",
        "durability",
        "components",
        "shops",
        "deconstructable",
        "scriptid",
        "zones",
    )

    def __init__(self):
        self.name: str | None = None
        self.type: str | None = None
        self.unk2: int | None = None
        self.material_type: str | None = None
        self.unk4: int | None = None
        self.texture_type_index: int | None = None
        self.texture_type_index_2: int | None = None
        self.price: float | None = None
        self.weight: float | None = None
        self.size: float | None = None
        self.mana: float | None = None
        self.slots: int | None = None
        self.durability: float | None = None
        self.components: int | None = None
        self.shops: int | None = None
        self.deconstructable: int | None = None
        self.scriptid: int | None = None
        self.zones: list[str] | None = None
        super().__init__()

    @property
    def _db_type(self):
        return ItemsDatabase


class LootItem(EiDatabaseTableRow):

    __slots__ = (
        "name",
        "type",
        "unk2",
        "material_type",
        "unk4",
        "texture_type_index",
        "texture_type_index_2",
        "price",
        "weight",
        "size",
        "mana",
        "slots",
        "durability",
        "components",
        "shops",
        "deconstructable",
        "typeid",
        "unk22",
        "unk23",
    )

    def __init__(self):
        self.name: str | None = None
        self.type: str | None = None
        self.unk2: int | None = None
        self.material_type: str | None = None
        self.unk4: int | None = None
        self.texture_type_index: int | None = None
        self.texture_type_index_2: int | None = None
        self.price: float | None = None
        self.weight: float | None = None
        self.size: float | None = None
        self.mana: float | None = None
        self.slots: int | None = None
        self.durability: float | None = None
        self.components: int | None = None
        self.shops: int | None = None
        self.deconstructable: int | None = None
        self.typeid: int | None = None
        self.unk22: bytes | None = None
        self.unk23: int | None = None
        super().__init__()

    @property
    def _db_type(self):
        return ItemsDatabase


class Materials(EiDatabaseTable[Material]):

    _row_type = Material


class Weapons(EiDatabaseTable[Weapon]):

    _row_type = Weapon


class Armors(EiDatabaseTable[Armor]):

    _row_type = Armor


class QuickItems(EiDatabaseTable[QuickItem]):

    _row_type = QuickItem


class QuestItems(EiDatabaseTable[QuestItem]):

    _row_type = QuestItem


class LootItems(EiDatabaseTable[LootItem]):

    _row_type = LootItem


class ItemsDatabase(EiDatabase):

    __slots__ = (
        "materials",
        "weapons",
        "armors",
        "quick_items",
        "quest_items",
        "loot_items",
    )
    _custom_types = {t.__name__: t for t in (DamageTypes, DamageTypes2, Modifiers,)}

    def __init__(self):
        self.materials = Materials()
        self.weapons = Weapons()
        self.armors = Armors()
        self.quick_items = QuickItems()
        self.quest_items = QuestItems()
        self.loot_items = LootItems()
        super().__init__()
